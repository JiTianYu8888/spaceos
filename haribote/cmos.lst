     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_io_out8
     7 00000000                                 	EXTERN	_io_in8
     8 00000000                                 [FILE "cmos.c"]
     9                                          [SECTION .text]
    10 00000000                                 	GLOBAL	_read_cmos
    11 00000000                                 _read_cmos:
    12 00000000 55                              	PUSH	EBP
    13 00000001 89 E5                           	MOV	EBP,ESP
    14 00000003 53                              	PUSH	EBX
    15 00000004 0F B6 45 08                     	MOVZX	EAX,BYTE [8+EBP]
    16 00000008 50                              	PUSH	EAX
    17 00000009 6A 70                           	PUSH	112
    18 0000000B E8 [00000000]                   	CALL	_io_out8
    19 00000010 6A 71                           	PUSH	113
    20 00000012 E8 [00000000]                   	CALL	_io_in8
    21 00000017 68 00000080                     	PUSH	128
    22 0000001C 88 C3                           	MOV	BL,AL
    23 0000001E 6A 70                           	PUSH	112
    24 00000020 E8 [00000000]                   	CALL	_io_out8
    25 00000025 0F B6 C3                        	MOVZX	EAX,BL
    26 00000028 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    27 0000002B C9                              	LEAVE
    28 0000002C C3                              	RET
    29 0000002D                                 	GLOBAL	_get_hour_hex
    30 0000002D                                 _get_hour_hex:
    31 0000002D 55                              	PUSH	EBP
    32 0000002E 89 E5                           	MOV	EBP,ESP
    33 00000030 53                              	PUSH	EBX
    34 00000031 6A 04                           	PUSH	4
    35 00000033 E8 FFFFFFC8                     	CALL	_read_cmos
    36 00000038 6A 04                           	PUSH	4
    37 0000003A C0 E8 04                        	SHR	AL,4
    38 0000003D 0F B6 C0                        	MOVZX	EAX,AL
    39 00000040 6B D8 0A                        	IMUL	EBX,EAX,10
    40 00000043 E8 FFFFFFB8                     	CALL	_read_cmos
    41 00000048 83 E0 0F                        	AND	EAX,15
    42 0000004B 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
    43 0000004E 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    44 00000051 C9                              	LEAVE
    45 00000052 C3                              	RET
    46 00000053                                 	GLOBAL	_get_min_hex
    47 00000053                                 _get_min_hex:
    48 00000053 55                              	PUSH	EBP
    49 00000054 89 E5                           	MOV	EBP,ESP
    50 00000056 53                              	PUSH	EBX
    51 00000057 6A 02                           	PUSH	2
    52 00000059 E8 FFFFFFA2                     	CALL	_read_cmos
    53 0000005E 6A 02                           	PUSH	2
    54 00000060 C0 E8 04                        	SHR	AL,4
    55 00000063 0F B6 C0                        	MOVZX	EAX,AL
    56 00000066 6B D8 0A                        	IMUL	EBX,EAX,10
    57 00000069 E8 FFFFFF92                     	CALL	_read_cmos
    58 0000006E 83 E0 0F                        	AND	EAX,15
    59 00000071 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
    60 00000074 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    61 00000077 C9                              	LEAVE
    62 00000078 C3                              	RET
    63 00000079                                 	GLOBAL	_get_sec_hex
    64 00000079                                 _get_sec_hex:
    65 00000079 55                              	PUSH	EBP
    66 0000007A 89 E5                           	MOV	EBP,ESP
    67 0000007C 53                              	PUSH	EBX
    68 0000007D 6A 00                           	PUSH	0
    69 0000007F E8 FFFFFF7C                     	CALL	_read_cmos
    70 00000084 6A 00                           	PUSH	0
    71 00000086 C0 E8 04                        	SHR	AL,4
    72 00000089 0F B6 C0                        	MOVZX	EAX,AL
    73 0000008C 6B D8 0A                        	IMUL	EBX,EAX,10
    74 0000008F E8 FFFFFF6C                     	CALL	_read_cmos
    75 00000094 83 E0 0F                        	AND	EAX,15
    76 00000097 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
    77 0000009A 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    78 0000009D C9                              	LEAVE
    79 0000009E C3                              	RET
    80 0000009F                                 	GLOBAL	_get_day_of_month
    81 0000009F                                 _get_day_of_month:
    82 0000009F 55                              	PUSH	EBP
    83 000000A0 89 E5                           	MOV	EBP,ESP
    84 000000A2 53                              	PUSH	EBX
    85 000000A3 6A 07                           	PUSH	7
    86 000000A5 E8 FFFFFF56                     	CALL	_read_cmos
    87 000000AA 6A 07                           	PUSH	7
    88 000000AC C0 E8 04                        	SHR	AL,4
    89 000000AF 0F B6 C0                        	MOVZX	EAX,AL
    90 000000B2 6B D8 0A                        	IMUL	EBX,EAX,10
    91 000000B5 E8 FFFFFF46                     	CALL	_read_cmos
    92 000000BA 83 E0 0F                        	AND	EAX,15
    93 000000BD 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
    94 000000C0 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
    95 000000C3 C9                              	LEAVE
    96 000000C4 C3                              	RET
    97 000000C5                                 	GLOBAL	_get_day_of_week
    98 000000C5                                 _get_day_of_week:
    99 000000C5 55                              	PUSH	EBP
   100 000000C6 89 E5                           	MOV	EBP,ESP
   101 000000C8 53                              	PUSH	EBX
   102 000000C9 6A 06                           	PUSH	6
   103 000000CB E8 FFFFFF30                     	CALL	_read_cmos
   104 000000D0 6A 06                           	PUSH	6
   105 000000D2 C0 E8 04                        	SHR	AL,4
   106 000000D5 0F B6 C0                        	MOVZX	EAX,AL
   107 000000D8 6B D8 0A                        	IMUL	EBX,EAX,10
   108 000000DB E8 FFFFFF20                     	CALL	_read_cmos
   109 000000E0 83 E0 0F                        	AND	EAX,15
   110 000000E3 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   111 000000E6 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   112 000000E9 C9                              	LEAVE
   113 000000EA C3                              	RET
   114 000000EB                                 	GLOBAL	_get_mon_hex
   115 000000EB                                 _get_mon_hex:
   116 000000EB 55                              	PUSH	EBP
   117 000000EC 89 E5                           	MOV	EBP,ESP
   118 000000EE 53                              	PUSH	EBX
   119 000000EF 6A 08                           	PUSH	8
   120 000000F1 E8 FFFFFF0A                     	CALL	_read_cmos
   121 000000F6 6A 08                           	PUSH	8
   122 000000F8 C0 E8 04                        	SHR	AL,4
   123 000000FB 0F B6 C0                        	MOVZX	EAX,AL
   124 000000FE 6B D8 0A                        	IMUL	EBX,EAX,10
   125 00000101 E8 FFFFFEFA                     	CALL	_read_cmos
   126 00000106 83 E0 0F                        	AND	EAX,15
   127 00000109 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   128 0000010C 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   129 0000010F C9                              	LEAVE
   130 00000110 C3                              	RET
   131 00000111                                 	GLOBAL	_get_year
   132 00000111                                 _get_year:
   133 00000111 55                              	PUSH	EBP
   134 00000112 89 E5                           	MOV	EBP,ESP
   135 00000114 53                              	PUSH	EBX
   136 00000115 6A 32                           	PUSH	50
   137 00000117 E8 FFFFFEE4                     	CALL	_read_cmos
   138 0000011C 6A 32                           	PUSH	50
   139 0000011E C0 E8 04                        	SHR	AL,4
   140 00000121 0F B6 C0                        	MOVZX	EAX,AL
   141 00000124 6B D8 0A                        	IMUL	EBX,EAX,10
   142 00000127 E8 FFFFFED4                     	CALL	_read_cmos
   143 0000012C 6A 09                           	PUSH	9
   144 0000012E 83 E0 0F                        	AND	EAX,15
   145 00000131 6B C0 64                        	IMUL	EAX,EAX,100
   146 00000134 01 C3                           	ADD	EBX,EAX
   147 00000136 E8 FFFFFEC5                     	CALL	_read_cmos
   148 0000013B C0 E8 04                        	SHR	AL,4
   149 0000013E 6A 09                           	PUSH	9
   150 00000140 0F B6 C0                        	MOVZX	EAX,AL
   151 00000143 6B C0 0A                        	IMUL	EAX,EAX,10
   152 00000146 01 C3                           	ADD	EBX,EAX
   153 00000148 E8 FFFFFEB3                     	CALL	_read_cmos
   154 0000014D 83 E0 0F                        	AND	EAX,15
   155 00000150 8D 84 18 000007BC               	LEA	EAX,DWORD [1980+EAX+EBX*1]
   156 00000157 8B 5D FC                        	MOV	EBX,DWORD [-4+EBP]
   157 0000015A C9                              	LEAVE
   158 0000015B C3                              	RET
